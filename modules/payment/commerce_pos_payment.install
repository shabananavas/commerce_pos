<?php

/**
 * @file
 * commerce_pos_payment.install
 */

/**
 * Implements hook_install().
 */
function commerce_pos_payment_install() {
  $methods = commerce_pos_payment_commerce_custom_offline_payments();

  foreach ($methods as $method) {
    // Whether or not an offline payment is enabled on the POS is determined
    // by a variable, so we want to enable it for each of our methods.
    commerce_pos_enable_payment_method($method['id']);
  }
}

/**
 * Implements hook_uninstall().
 */
function commerce_pos_payment_uninstall() {
  drupal_load('module', 'commerce_pos_payment');
  drupal_load('module', 'commerce_pos');

  $methods = commerce_pos_payment_commerce_custom_offline_payments();

  foreach ($methods as $method) {
    // We're turning off the module, remove our methods from the POS settings.
    commerce_pos_disable_payment_method($method['id']);
  }
}

/**
 * Implements hook_requirements().
 */
function commerce_pos_payment_requirements($phase) {
  $requirements = array();
  $payments_available = commerce_pos_get_payment_options();
  if ($phase == 'runtime') {
    if ($payments_available) {
      $requirements['commerce_pos_payment'] = array(
        'title' => t('Commerce Point of Sale Payment'),
        'severity' => REQUIREMENT_OK,
        'value' => t('Payment Methods Configured'),
      );
    }
    else {
      $link = l(t('configure payment methods here.'), '/admin/commerce/config/custom-offline-payments');
      $requirements['commerce_pos_payment'] = array(
        'title' => t('Commerce Point of Sale Payment'),
        'severity' => REQUIREMENT_WARNING,
        'value' => t("No payment methods configured. Enable Commerce POS Payments for default payment methods or !link", array('!link' => $link)),
      );
    }
  }

  return $requirements;
}
